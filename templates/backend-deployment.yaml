apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  labels:
    app: backend
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
       {{- if .Values.securityContext.backend }}
        runAsUser: {{ .Values.securityContext.backend.runAsUser }}
        runAsGroup: {{ .Values.securityContext.backend.runAsGroup }}
        fsGroup: {{ .Values.securityContext.backend.fsGroup }}
       {{- end }} 
      containers:
        - name: backend
          image: "{{ .Values.image.repository }}/backend:{{ .Values.image.backendTag }}"
          ports:
            - containerPort: 3000
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: 3000
          #   initialDelaySeconds: 5
          #   periodSeconds: 30
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: 3000
          #   initialDelaySeconds: 15
          #   periodSeconds: 60
---
apiVersion: v1
kind: Service
metadata:
  name: backend
spec:
  type: {{ .Values.service.backend.type }}
  selector:
    app: backend
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
      nodePort: {{ .Values.service.backend.nodePort }}

