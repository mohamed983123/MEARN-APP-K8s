apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  labels:
     app: frontend
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "80"
        prometheus.io/path: "/metrics"
    spec:
      {{- if .Values.securityContext.frontend }}
      securityContext:      
        runAsUser: {{ .Values.securityContext.frontend.runAsUser }}
        runAsGroup: {{ .Values.securityContext.frontend.runAsGroup }}
        fsGroup: {{ .Values.securityContext.frontend.fsGroup }}
      {{- end }}
      containers:
        - name: frontend
          image: "{{ .Values.image.repository }}/frontend:{{ .Values.image.frontendTag }}"
          ports:
            - containerPort: 80
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 15
            periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
spec:
  type: {{ .Values.service.frontend.type }}
  selector:
    app: frontend
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      nodePort: {{ .Values.service.frontend.nodePort }}

